# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.


li = ['USA', False, 'Russia', {'a', 'b'}, b'Australia', 0, 4.09, 8, [78, 91], True]

for item in li:
    print(item, type(item))

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы
# с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

for i in range(0, len(li) - 1 - (len(li) % 2), 2):
    li[i], li[i+1] = li[i+1], li[i]

print(li)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.

# решение через dict
seasons = {
    'winter': [1, 2, 12],
    'spring': [3, 4, 5],
    'summer': [6, 7, 8],
    'autumn': [9, 10, 11]
}

number = int(input('Insert month number: '))

for season, months in seasons.items():
    if number in months:
        print(season)
        break

# решение через list
months = [1, 2, 3, 4, 5, 6,
 7, 8, 9, 10, 11, 12]

number = int(input('Введите номер месяца: '))

if number == 1 or number == 2 or number == 12:
  print('зима')
elif number == 3 or number == 4 or number == 5:
  print('весна')
elif number == 6 or number == 7 or number == 8:
  print('лето')
else:
  print('осень')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

s = input('Введите строку из нескольких слов, разделённых пробелами: ')
s_split = s.split(' ')

for i in range(len(s_split)):
    print(i+1, s_split[i][:10])

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми
# значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка.
# Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [7, 5, 3, 3, 2]

while True:
    new_value = int(input('Введите значение рейтинга: '))
    rating.append(new_value)
    rating.sort(reverse=True)
    print('Итоговый рейтинг:', rating)

    more_values = input('Хотите ввести еще одно значение?(да/нет): ')
    if more_values == 'да':
        continue
    elif more_values == 'нет':
        break

print('Итоговый рейтинг:', rating)


# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь
# с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#     Пример готовой структуры:
#
#     [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#     ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
#
#     {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]


items = []
items_base = {
    'название': [],
    'цена': [],
    'количество': [],
    'единицы': []
}

count = 1
while True:
    name = input('Введите название товара: ')
    price = int(input('Введите цену товара: '))
    amount = int(input('Введите количество товара: '))
    units = input('Введите единицу товара: ')

    item = (count, {'название': name, 'цена': price, 'количество': amount, 'единицы': units})
    items.append(item)

    items_base['название'].append(name)
    items_base['цена'].append(price)
    items_base['количество'].append(amount)
    items_base['единицы'].append(units)

    count += 1
    more_items = input('Хотите ввести информацию об еще одном товаре?(да/нет): ')
    if more_items == 'да':
        continue
    elif more_items == 'нет':
        break

print(items)
print(items_base)
